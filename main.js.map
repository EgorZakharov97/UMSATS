{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/core/app.routing.module.ts","webpack:///./src/app/core/material.module.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/user/user.component.css","webpack:///./src/app/user/user.component.html","webpack:///./src/app/user/user.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-login></app-login>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'umsats-client';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { NgModule } from '@angular/core';\nimport { CustomMaterialModule } from './core/material.module';\nimport { AppRoutingModule } from './core/app.routing.module';\nimport { FormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { UserComponent } from './user/user.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    UserComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    CustomMaterialModule,\n    FlexLayoutModule,\n    FormsModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { UserComponent } from '../user/user.component';\r\nimport { LoginComponent } from '../login/login.component';\r\nconst routes: Routes = [\r\n    { path: 'user', component: UserComponent },\r\n    { path: 'login', component: LoginComponent },\r\n    { path: '', component: LoginComponent }\r\n];\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forRoot(routes)\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ],\r\n    declarations: []\r\n})\r\nexport class AppRoutingModule {\r\n }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport {\r\n    MatButtonModule, MatCardModule, MatDialogModule, MatInputModule, MatTableModule,\r\n    MatToolbarModule, MatMenuModule, MatIconModule, MatProgressSpinnerModule, MatCheckboxModule\r\n} from '@angular/material';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        MatToolbarModule,\r\n        MatButtonModule,\r\n        MatCardModule,\r\n        MatInputModule,\r\n        MatDialogModule,\r\n        MatTableModule,\r\n        MatMenuModule,\r\n        MatIconModule,\r\n        MatProgressSpinnerModule\r\n    ],\r\n    exports: [\r\n        CommonModule,\r\n        MatToolbarModule,\r\n        MatButtonModule,\r\n        MatCardModule,\r\n        MatInputModule,\r\n        MatDialogModule,\r\n        MatTableModule,\r\n        MatMenuModule,\r\n        MatIconModule,\r\n        MatProgressSpinnerModule\r\n    ],\r\n})\r\nexport class CustomMaterialModule {\r\n }\r\n","module.exports = \".login-card {\\r\\n    overflow: hidden;\\r\\n    min-width: 300px;\\r\\n    height: 100%;\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n}\\r\\n\\r\\n.full-width {\\r\\n    width: 100%;\\r\\n    display: flex\\r\\n}\\r\\n\\r\\n.icon-size {\\r\\n    width: 220px;\\r\\n    height: 55px;\\r\\n}\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n    <mat-toolbar-row>\\n        <span style=\\\"padding-right:3px; padding-top: 3px; display:inline-block;\\\">\\n            <img class=\\\"icon-size\\\" src=\\\"http://www.umsats.ca/wp-content/uploads/2018/08/cropped-UMSATS_Logo-3.png\\\">\\n        </span>\\n        <span fxFlex></span>\\n\\n        <button mat-button>About</button>\\n        <button mat-button>Contact</button>\\n    </mat-toolbar-row>\\n</mat-toolbar>\\n\\n<mat-card class=\\\"login-card\\\">\\n    <mat-card-header>\\n        <mat-card-title>Login</mat-card-title>\\n    </mat-card-header>\\n    <mat-card-content>\\n        <form class=\\\"login-card\\\">\\n            <table class=\\\"full-width\\\" cellspacing=\\\"0\\\">\\n                <tr>\\n                    <td>\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <input matInput placeholder=\\\"Username\\\" [(ngModel)]=\\\"username\\\" name=\\\"username\\\" required>\\n                        </mat-form-field>\\n                    </td>\\n                </tr>\\n                <tr>\\n                    <td>\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <input matInput placeholder=\\\"Password\\\" [(ngModel)]=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\" required>\\n                        </mat-form-field>\\n                    </td>\\n                </tr>\\n            </table>\\n        </form>\\n        <mat-spinner [style.display]=\\\"showSpinner ? 'block' : 'none'\\\"></mat-spinner>\\n\\n    </mat-card-content>\\n    <mat-card-actions>\\n        <button mat-raised-button (click)=\\\"login()\\\" color=\\\"primary\\\">Login</button>\\n    </mat-card-actions>\\n</mat-card>\"","import { Component, OnInit } from '@angular/core';\n\nimport { Router } from '@angular/router';\nimport { MatDialog } from '@angular/material';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  username: string;\n  password: string;\n\n  ngOnInit() {\n  }\n\n  login(): void {\n    if (this.username === 'admin' && this.password === 'admin') {\n      this.router.navigate(['user']);\n    } else {\n      alert('Invalid credentials');\n    }\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  user works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}